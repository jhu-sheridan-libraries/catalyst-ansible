---
- name: install and configure the common elements for catalyst services
  hosts: services
  tags:   services

  tasks:
  - name: set rails environment var
    lineinfile:
      dest:   "/etc/profile.d/rails.sh"
      regexp: "^export RAILS_ENV="
      line:   "export RAILS_ENV={{ rails_env }}"
      state:  present
      create: yes
    become: true

  - name: set debugging environment var
    lineinfile:
      dest:   "/etc/profile.d/rails.sh"
      regexp: "^export DEBUGGING="
      line:   "export DEBUGGING={{ debugging | default('false') }}"
      state:  present
      create: yes
    become: true

  - name: put ruby on everyone's path
    lineinfile:
      dest:   "/etc/profile.d/ruby.sh"
      regexp: "^export PATH="
      line:   "export PATH=$PATH:{{ service_ruby_path }}/bin"
      state:  present
      create: yes
    become: true

  - name: symlink ruby for root
    file:
      src: "{{ service_ruby_path }}/bin/{{ item }}"
      dest: "/usr/bin/{{ item }}"
      state: link
      force: yes
    become: true
    with_items:
      - ruby
      - gem
      - irb
      - rake
      - rdoc
      - bundle
      - jruby
      - jgem

    # TODO: remove this is we ever fix our jruby install process
  # FIXME: this doesn't actually have the desired effect on stage or prod
  # (pre-existing servers configured oddly)
  # additional efforts to use the cortrect ruby below...
  - name: configure chruby to use the appropriate ruby version
    template:
      src: "chruby.sh.j2"
      dest: "/etc/profile.d/chruby.sh"
      mode: "u+x"
    become: true

  - name: configure application user
    include: configure_app_user.yml

  # begin legacy server ruby version block
  - block:
    # NOTE: our existing stage & prod services servers (catsolrmain & -test)
    # have an atypical home dir for the application user (catalyst)
    - name: get app user info
      getent:
        database: passwd
        key: "{{ app_user }}"
        split: ":"
    - debug:
        var: getent_passwd
        verbosity: 2

    - name: save app user's home directory
      set_fact:
        app_user_home: "{{ getent_passwd[app_user][4] }}" # < fragile, but apparently standard

    - name: create or update app user's ruby version file
      lineinfile:
        dest:   "{{ app_user_home }}/.ruby-version"
        regexp: "^(.*)$"
        line:   "{{ service_ruby_version }}"
        owner: "{{ app_user }}"
        group: "{{ app_group }}"
        state:  present
        create: yes
      become: true

    when: legacy_server
  # end legacy server ruby version block

  - name: Install Bundler.
    gem:
      name: bundler
      version: "{{ service_bundler_version | default(omit) }}"
      state: present
      user_install: no
    become: true
